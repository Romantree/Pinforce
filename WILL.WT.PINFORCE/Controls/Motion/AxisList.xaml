<DataGrid x:Class="WILL.WT.PINFORCE.Controls.Motion.AxisList"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:local="clr-namespace:WILL.WT.PINFORCE.Controls.Motion"
          xmlns:tc="clr-namespace:TS.FW.Wpf.v2.Controls;assembly=TS.FW.Wpf.v2"
          mc:Ignorable="d" 
          d:DesignHeight="570" d:DesignWidth="1191" Style="{StaticResource xDataGridBase}">
    <DataGrid.Columns>
        <DataGridTemplateColumn Header="Name" Width="2*">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <tc:EventBtn Style="{StaticResource xEventBtn}"
                                 Content="{Binding Name}"
                                 Foreground="{Binding IsSeleted, Converter={StaticResource xColorCvt}, ConverterParameter=Menu}"
                                 Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AxisList}}, Path=DataContext.OnSelectAxisCmd}"
                                 CommandParameter="{Binding}"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Servo" Width="60">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <tc:EventBtn Style="{StaticResource xEventBtn}"
                                 Content="{Binding State.IsServoOn, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"
                                 Background="{Binding State.IsServoOn, Converter={StaticResource xColorCvt}, ConverterParameter=OnOff}"
                                 Command="{Binding OnAxisCmd}" CommandParameter="Servo"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Alarm" Width="60">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <tc:EventBtn Style="{StaticResource xEventBtn}"
                                 Content="{Binding State.IsAlarm, Converter={StaticResource xStringCvt}, ConverterParameter=Error/None}"
                                 Foreground="{Binding State.IsAlarm, Converter={StaticResource xColorCvt}, ConverterParameter=Alarm}"
                                 Command="{Binding OnAxisCmd}" CommandParameter="Alarm"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="Busy" Width="60" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.IsBusy, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>
        <DataGridTextColumn Header="Home" Width="60" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.IsHome, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>
        <DataGridTextColumn Header="(+) Limit" Width="60" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.IsPlus, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>
        <DataGridTextColumn Header="(-) Limit" Width="60" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.IsMinus, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>
        <DataGridTextColumn Header="Act Position (mm)" Width="*" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.ActPos, StringFormat={}{0:f3}}"/>
        <DataGridTextColumn Header="Cmd Position (mm)" Width="*" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.CmdPos, StringFormat={}{0:f3}}"/>
        <DataGridTemplateColumn Header="" Width="60">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <tc:EventBtn Style="{StaticResource xEventBtn}"
                                 Content="Reset"
                                 Command="{Binding OnAxisCmd}" CommandParameter="Reset"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
    </DataGrid.Columns>
</DataGrid>
